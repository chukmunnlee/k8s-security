---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opa-sa
  namespace: opa-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: opa-cr
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
  - get
  - patch
  - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opa-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opa-cr
subjects:
- kind: ServiceAccount
  name: opa-sa
  namespace: opa-system

---
apiVersion: v1
kind: Secret
metadata:
  name: opa-tls
  namespace: opa-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwdGFXNXAKYTNWaVpVTkJNQjRYRFRJeE1Ea3dOVEExTXpFME5sb1hEVE14TURrd05EQTFNekUwTmxvd0ZURVRNQkVHQTFVRQpBeE1LYldsdWFXdDFZbVZEUVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHJDCjVIYlZrekxJaTNsYmMvY21JT29RQThRdWRUY2JLQlVxTDVBTE5pT0lLYzRMU0RLVVFkc3pYLzhiNDlteEdKWWoKRlhIb0tQa051Rlg0ZnlGNUloTjhUaG5UUk8waUNBUWkxbzYrV2t1YStUc0oxWTE4b0pYOG1qTXV4dndaTFBwSApKZzVBZzh5MGhxN2hNK1RiOUFtMlRtM1YwNTM3MTRjYk82UjZqeHBiVktpMFNUeE91WSthd1lRRnFLeEpjTWVIClhlazE0RWpwQytISmduc0lhN0pPTjl1Q2FnTmxrVmkrNE5kTUR0c2VDVjFkRHRUVzNReTFVd2M3QnV3dElRVUkKb1BrWEUvK05tY3ZJcG1VcTlSZTZCbVFMbDk1MS9HckRWWUlzN1czQUwwcDF2TFhvOWFMY3FqNzQxdEJYeG1VbApxZmFRREt0WkdRRnNSa0Q1VWhNQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJTUTdQNENDbXA1cVg0c21rVFV6UzRJekRQdnNqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFyUG5tSnlyTAprTkM2WHluQk1OTEM4Qll1SS92cGpEQ2UxdnB0cW0xYzFsWjU0MDdHOWFiM2tsNHM3ZjhsR1RSQWdXa3EvMHdKCmRqL09JemY4ZFlDdGZBMXJOdktiUlg3NXp3RE9ib1Y3REpINkhMQm5BbXcxcjc2QitNNCtZY1RSMm9ZUFpYQ3UKUHlSQnY5K01uQWRQb1F4VWczaDlxUG1IS2V3SG9mUjN1TFpaZFhtTEMzZU5lVU10OVJ6T1FKMHhiTEhSbDBhMApZRVZNQ3NsSXp3aFdMWUZrSEdZT05JYUMxL1RiNjBIcTZpUER5TDVJK1FjbktFNG5iQXM3a1RLN0pBUEhETG1FClVyTEx2N0ZFdWF1MmtDWHpONlJOUFQzWHFvNHNGMVpwMVdBUjNJYWV0dFg1OXZWQXBhWFhOVzZ0NzJJbm9yaDQKa2M2a3g0U1BhUUEydnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVpakNDQTNLZ0F3SUJBZ0lRY1c0VVpjbDdiRXN4K3FYWm1zdlp4ekFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwdGFXNXBhM1ZpWlVOQk1CNFhEVEl5TURReU56QXdNRE15TVZvWERUSXpNRFF5TnpBdwpNRE15TVZvd1JERVZNQk1HQTFVRUNoTU1jM2x6ZEdWdE9tNXZaR1Z6TVNzd0tRWURWUVFERXlKemVYTjBaVzA2CmJtOWtaVHB2Y0dFdGMzWmpMbTl3WVMxemVYTjBaVzB1YzNaak1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0MKQWc4QU1JSUNDZ0tDQWdFQXp2a1lPNkZiS0xKSXZaTVdNVlpwWU42RHA5bnltbzVWZkdFUEpOVkR5WDNoNCs2VgplSnJnY1hubk9PM3l1MGMwZVowQ2NLTU9wU1dnZkxjdVA0L2tOdWRqTDh4MzdNWnR3Q3phaEdaNDFzMlNMNU8xCmRmeWxnc2lXRVFLTWlmcVpFcm5LclQwVXJ1ZWpLMkhxNDB1b3plMTlMam9xS0xPUUhwUXFubE5EYnVROVZKSVUKc3BpcnBjZ2padm1TeEt0WS8rZzVjOE9XcjBBTmNZQUJVVjNQNzM5RHBFRTdzZXpxZU1EdEpFaHZxZmE4NjJMegppWjhmZ2UwTVBVU2N4cUUrR1lRWVJSRWxrMURBZDk0c2hSRlhZUmlkMkt1YTE3TCtHSWs5UDl3WTZyVGR6TGJhCjdlRHorMXYyVFBjUXRhUEhmWWdLenNvWWlncnA5UEtGWHYrc2hhYXVsNEFzVUwvRXZUd1RIaGpvbWxFalFpNHoKYTRINUtnTFZMK2RpNmVMSENwQzNPNXV2d2FNVlN4YjJ6VFRxcGd2dzhUK3MxWTlvSE83MlVPWi9rWlRQUktGYgpxZU1KUFdwRVBzWWFSTS9sNWFaUFpsSFFZLzloT3RtMm9MRVpQbFdYQWVPWlhjZlpZdDZEUzc2a0FLYW1OZ3J4CnBtbklKVUFVeENxemlMOWpCSmhKUStFS3VQTnJ1Y0luS1o4T3diY1NJcDVveEJxOGdVK2dROGt5ck42c29taloKZE5mZlh4eldPNzU1Y1NRclZnUlJOM2JXM2RSZVBsOTlHZEVYc0tGOWwyMkpuTU8wN3U5N3RRNHlJbHU1cGVEWgpGT1hiU2pkZG15MDJuM1pwYVR5Qm9xTWU0NXRzNGtTY1EzS2sxWHpaUlNpZjVhaTRsL0JKR1RoT1RsMENBd0VBCkFhT0JwakNCb3pBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU1E3UDRDQ21wNXFYNHNta1RVelM0SXpEUHZzakJOQmdOVgpIUkVFUmpCRWdoWnZjR0V0YzNaakxtOXdZUzF6ZVhOMFpXMHVjM1pqZ2lSdmNHRXRjM1pqTG05d1lTMXplWE4wClpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXeUhCTUNvSjZJd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGekYKTzQ3d0E0aUVVOHNoQkVJZ2g1aHJpMWJSa3FhNVVZdExOdmdobDVHRGEvc3hKOXhhaGpXOXVPdTJUZnhXMWMvago3YWVjWXQvZDNzSTVjbm1hOTkwc3VzbFFiOFNGRE9IZU51VklONjdzc2U1b041WlhKQkhJcDc1YWtLbGNlVmVFCkc4TU5wYzh0TERLZGg2ay96WG9QR2JYd09sZ0FlWCtwQklJTlF5dFFLVHo2Ym1FNUhTTjVMeWpFckFOOHR5U3oKNUxwNzRLR0RYWFFyK1lQTzFFMjNCdy95cHlsWEEzR0NqVzU0T0tzZkQ5bnRLV0xNcDFHWTlaWXJ1dGFJL3hoaApDN1lTS0ZBVUx5cmY4dExULzN2MlpxT3VFVTgvZXI5N2d3Q2FUUW9pR2hxUzB5QzBQQmpHTmxQSmtXdHU4NjI4CndmNElPNzhIc3ZnZ2g3ejFZd289Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBenZrWU82RmJLTEpJdlpNV01WWnBZTjZEcDlueW1vNVZmR0VQSk5WRHlYM2g0KzZWCmVKcmdjWG5uT08zeXUwYzBlWjBDY0tNT3BTV2dmTGN1UDQva051ZGpMOHgzN01adHdDemFoR1o0MXMyU0w1TzEKZGZ5bGdzaVdFUUtNaWZxWkVybktyVDBVcnVlaksySHE0MHVvemUxOUxqb3FLTE9RSHBRcW5sTkRidVE5VkpJVQpzcGlycGNnalp2bVN4S3RZLytnNWM4T1dyMEFOY1lBQlVWM1A3MzlEcEVFN3NlenFlTUR0SkVodnFmYTg2Mkx6CmlaOGZnZTBNUFVTY3hxRStHWVFZUlJFbGsxREFkOTRzaFJGWFlSaWQyS3VhMTdMK0dJazlQOXdZNnJUZHpMYmEKN2VEeisxdjJUUGNRdGFQSGZZZ0t6c29ZaWdycDlQS0ZYditzaGFhdWw0QXNVTC9FdlR3VEhoam9tbEVqUWk0egphNEg1S2dMVkwrZGk2ZUxIQ3BDM081dXZ3YU1WU3hiMnpUVHFwZ3Z3OFQrczFZOW9ITzcyVU9aL2taVFBSS0ZiCnFlTUpQV3BFUHNZYVJNL2w1YVpQWmxIUVkvOWhPdG0yb0xFWlBsV1hBZU9aWGNmWll0NkRTNzZrQUthbU5ncngKcG1uSUpVQVV4Q3F6aUw5akJKaEpRK0VLdVBOcnVjSW5LWjhPd2JjU0lwNW94QnE4Z1UrZ1E4a3lyTjZzb21qWgpkTmZmWHh6V083NTVjU1FyVmdSUk4zYlczZFJlUGw5OUdkRVhzS0Y5bDIySm5NTzA3dTk3dFE0eUlsdTVwZURaCkZPWGJTamRkbXkwMm4zWnBhVHlCb3FNZTQ1dHM0a1NjUTNLazFYelpSU2lmNWFpNGwvQkpHVGhPVGwwQ0F3RUEKQVFLQ0FnQnFhemVqaVc2V3VUeWZoTjVYVmVmdTc5cGYxcmRmOHFsUHY1UUt5MEVFZkI1R2xTanpqeWF5RWd6cQpmNlpiMXR2TFlBaWVJNmpuRHphNmlYRlZLMFliV05QdUFzTHkwb0FoM0s0cWY0bklZSUMyeDhyNHRJUGhnQU54CkVZOXpibytBU2xsRXcvQTdra3lhaE1sQ1AyZTNJbEpJRDQ0WHlXUGo1U2tZcVJVMkVsTGFoaFh3VW9HSFJ5VzAKejhSQUxSNGd6cVdqdVVCa01abjM3dW8rak83YVpPUkJzMnpmS2tMUS9kbXcyekhYQVUvWDg5UG13aE53T1pNZQplWVhtdDRkM2xTenBia3lVdDJPTy9vU0Rrd3dMbDUycGgycWhWNTVBdldmcHl1Qmc1Y2haZHZlUWNpYmc2a0wxCkJkL29sU0tBa0ErR2pmRWFJVXgwTHJLV3l2MUgrbFdQSmQ2YU56VEQ0WjNsckYyeXVINVZCdWdicE5NbjdSOU8KVE1kSjIvSW5IRlBTbjlEM0Ntd1g2K3M4Ti9CeTM0RllBWHdFQ0Y1bXR3NXlnZGRnQ2YveXhOdmUrb29DQ2tTRQp4VmNhTG9vdnZJZlRxNVFPZ1U5VjZSY2U0UFZqNUVMWXdwaytBbmhtMlY2VGlUUE5oblhZUFF4TXpiRGVQOGpzCjF1ZkdNRDYrN2dVWEhCQ0hJT0tVM3JvdmJ4b1lOdEZUR1VGbmtHdC9qcnFoTHRRbkN1SFNDK0U5bWx1aEgyblIKbTE3NFVQKzRGOGU5VGVZbFpDM0htcVBkVTJkVmhKWUFZcUl2ZCtCOHBMQWNiVVYrL3oyYXZKdkt0cVQzajhHOQpPK0lFVFFKWDlQWWdFMVc5ay9zOHJlTXIxSi9kRFVnaGljbDFZTm1KMVg5MTF4cDgvUUtDQVFFQTZWbnErS1JEClRVcXJVamMzbHFPcGpTdlY2amlvSXJOREhVS2J6TEJJZlRveEpFbVAvRjBjdzF1ZGd5RnB2QlN1V3kvWHRuVWEKbitFcWcydHZPOUUrNEdBRGxnRjJyb0pqSjVEUkh5S1NKSk02Zkt0S2VuYXR0MzVzYllUSHYvMzI4NDVWV2NoKwptL1QwUHo4eitMMm93cmE1QjN3S05LZTJCbzJKc0tqbTlwVnNKWHVpSE84OXN6OGYyVzlBNUEvMWhIeDY2aEQ1Cmp1OXJVRytwKytoR09kRk4yUVllQVRFTitkQXViam0vcnB2MFNPeWROZ2pLRzY4YWcxK0FEUmNXTjlLKzliQVkKYUdXUkMwaHN4RlRlSkhjdTZXMmQ1L0lySzJiYUloQTJVSVhDdDV6TlVuMzVPSDZ3dHBwSHNxNG1wRElPV2IrSgpUVVRWWDR5K1hnTzFEd0tDQVFFQTR3L0J3S1FQL0c3Wkx0VzZ0NU5QeWV3WGR2aHBWdGx3bDZXdW5DZmZOSHpvCi9uWHR4K0VkSkJOV0tqdUNDS3l0dTUzVWZxWml5SXoybG1HajNLdTlyejd3TEswUUlFMm9OMXlic3d4R1NLM2UKc0Q0U0E5cytBaEhXb2NNQmVNbjd0Zkl0d3d1Q1gvZW9jZzFrOUMzSDlCT1pocnZGU3ZTcERJdGROa2MzMzNOYgpDdkZqK2o5RkhqdUdGK3M1OU9XQkk0WGtSNHB6TzlrOTBiWkxwWnU4bFJBNnhacDB1Sm9vZS94K28yRXc5anR1CjFVN1o4em80UXRZZGJBQmVBVE1mNVFwakdtU3FQamFpV3ZQa0kvU09vNkt3b0lFNGN2WTVpRW5VSDI2MEYrWG8KTllUQ2hoZERtK3pubHBmM3dWMGg3eFFXK0I4RlFRUE53WEk4SUN5OTB3S0NBUUF0cnJxL1hua0dncDJ6aExmUApOODhUb2dkSXlUcXhRR0xkTVpNS3FXQW5rK0xXOWNmSVlmb2xqS1B6YmZFakx2RkxUTHh3TGRDK2gvZ29yam1pCmZqNU84cjBBK3R4ZklZdUR6V2dETG1OcDRhRExrMFVMWUh4MXRieElYSHcyYStPU25zUzZ4UE4wV0tvUVQ3RSsKK3ZJMDNFeXcyR212RVQ0alhrWWNYWlNKcFlyOGM0MnpHR3I5MGxmTDIybmF1LzBXcUwvdlhzOWNXaWFxSXBJbQpqTHhpeVVUeVBhNVdFV0pwQzRacmNjYkN5aWt5dFkrNWFsTVd4RnJ1YVIzS2NrQ1pRUnE5UW5Ja3plMXRSZ3AxCkRTQklCMFVaMGFuZUpKeXE3SUc3dFd6TXFzTUo2eHFQRWJaZWh2N1ZZTEswbWo5YVdhcFJpNXUza3NncTRvVEsKSnZPbEFvSUJBUUM2dUNsbmhrTFRIa0NoQUFjMGtRSnJGU2ZTb01MWE5hWWVQcFFSTzhTVVFDZkZvU3F4Vk5DRwo2eFBQVlBKQXVlZUFRbkVNMlR5Z21UTHFSVTdmMTZiN3ByRVF2QnhueEJTUnVpa2JtdnR0SnZYYVRxQzM1U0hmCng5V05YblFtWlVzRnV5cWdteVZTVDdHSVlMVmxDd1RFRlI0S0t2MDUvMm5JdEE0cDVYVHYzc2UrZnZUdFEveE4KdVRzekRpK3gwTTFhYmU5a1dWa2JuVEQxOUlmT252djhSTVZmMi8waUZUczNnbEtOZmc0cVhvTnREQk8wcldxNApvNlM4UEswUkpYNlQ5ZSs3TTQ2LzdHT2trYTFKV0FHNFZNQVVyVTdEVXZIS3ZwT2VhWVhWcFMxSVhXMHRvWkhxCmRtMlhiRTdFQnhjeHFINmUrYnR6VkhKdUlzZUkyZUliQW9JQkFBVW1qK0NBWVBjWEp2ZlJQYThVUk14L004b2cKZEZNTUN5emZZQ0pBRVQrMWxHT3p5OC9RYjJuNklrS0dFVGl4d0lzK2w1ZGdWV3VVSVdnT0JERWkxQzcxMG84YgpJQ1FmRUlIUzZIL2dKY21uRFhMM3g0WFY1YlNzbVVPb3oxMFpIc25CbWZiVmlwTm4wNUJudXoybm5FNlEzZHF2Cnh2RlRoUFVuODF2SGwrbHdITnpFMHJQbVAxN1IvMStsV3Y3bDJ6WXFwR0tVbXJmZnN5V3VFa1BQeEIyNGpLcGUKQVNxbGNmSGd1SkhNVC83b3RlQWIwcHdpSEd4OW9TbHltREt6UVBPbG9OUFZUT2tNMytKL0VoMlo4T2xyTld4Mgo5SWUrWExFUzk5UUJRajFWV0ttNVRiVm5VYUI5U3kweTZleTY1Q3VCVFRLc1R4WWd3K0RET3p3eDBCRT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opa-deploy
  labels:
    app: opa-deploy
  namespace: opa-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa-deploy
  template:
    metadata:
      labels:
        app: opa-deploy
    spec:
      serviceAccountName: opa-sa
      volumes:
      - name: cert-vol
        secret:
          secretName: opa-tls
      containers:
      - name: opa
        image: openpolicyagent/opa:0.39.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --server
        - --addr=0.0.0.0:8443
        - --addr=http://127.0.0.1:8181
        - --tls-ca-cert-file=/certs/ca.crt
        - --tls-cert-file=/certs/tls.crt
        - --tls-private-key-file=/certs/tls.key
        - --log-format=json-pretty
        - --log-level=debug
        ports:
        - containerPort: 8443
        volumeMounts:
        - name: cert-vol
          mountPath: /certs
          readOnly: true
      - name: kube-mgmt
        image: openpolicyagent/kube-mgmt:4.1.0
        imagePullPolicy: IfNotPresent
        args:
        - --enable-polcies=true
        - --require-policy-label=true
        - --policies=policies
        - --replicate-cluster=v1/namespaces
        - --replicate=v1/pods

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: opa-deploy
  name: opa-svc
  namespace: opa-system
spec:
  type: ClusterIP
  selector:
    app: opa-deploy
  ports:
  - port: 8443
    protocol: TCP
    targetPort: 8443
