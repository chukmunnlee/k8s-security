---
apiVersion: v1
kind: ConfigMap
metadata:
  name: policy-cm
  labels:
    name: policy-cm
    openpolicyagent.org/policy: rego
  namespace: policies

data:
  policy.rego: |
    package kubernetes.admission

    deny[msg] {
      input.request.kind.kind == "Pod"
      container = input.request.object.spec.containers[_]
      endswith(container.image, ":latest")
      msg := sprintf("Container %s in Pod %s uses 'latest' tag", [ container.name, input.request.object.metadata.name ])
    }

    deny[msg] {
      input.request.kind.kind == "Pod"
      container = input.request.object.spec.containers[_]
      container_parts = split(container.image, ":")
      1 == count(container_parts)
      msg := sprintf("Container %s in Pod %s uses 'latest' tag", [ container.name, input.request.object.metadata.name ])
    }

    deny[msg] {
      input.request.namespace == "policies"
      not input.request.kind.kind == "ConfigMap"
      msg := "Only OPA configmap policies can be deployed to policies namespace"
    }

    deny[msg] {
      input.request.namespace == "policies"
      input.request.kind.kind == "ConfigMap"
      not input.request.object.metadata.labels["openpolicyagent.org/policy"] == "rego"
      msg := "Only OPA configmap policies with openpolicyagent.org/policy=rego label can be deployed to policies namespace"
    }
